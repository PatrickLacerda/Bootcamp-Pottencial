using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading.Tasks;

namespace Programação_orientada_a_objeto.models
{
    public class Teoria_Classes_Abstratas_e_Interfaces
    {
        //**** CLASSE ABSTRATA  ****/

        //CLASSE ABSTRATA TEM COMO OBJETIVO SER EXCLUSIVAMENTE UM MODELO PARA SER HERDADO, PORTANTO, NÃO PODE SER INSTANCIADA.
        // VOCE PODE IMPLMENTAR METODOS OU DEIXA-LOS A CARGO DE QUEM HERDAR.


        //**** ****//

        // UMA CLASSE SELEDA TEM COMO OBJETIVO DE IMPEDIR QUE OUTRAS CLASSES FAÇAM UMA HERANÇA DELA,OU SEJA, NENHUMA CLASSE PODE SER SUA DERIVADA.
        // TAMBEM EXISTEM METODOS E PROPRIEDADE SELADAS 


        // ****  CLASSE OBJECT ****//

        // A CLASSE system.object  É A MÃE DE TODAS AS CLASSES NA HIRARQUIA DO .NET
        // TODAS AS CLASSES DERIVAM, DIRETA OU INDIRETAMENTE DA CLASSE OBJECT, E ELA TEM COMO OBJETIVO PROVER SERVIÇOS DE BAIXO NÍVEL, PARA SUA CLASSES FILHAS

        //**** INTERFACES ****/// -- SERIA IMPLMENTAR E NÃO HERDAR 

        // UMA INTERFACE É UM CONTRATO QUE PODE SER IMPLEMENTADO POR UMA CLASSE
        // É COMO SE FOSSE UMA CLASSE ABSTRATA, PODENDO DEFINIR METODOS ABSTRATOS PARA SEREM IMPLEMENTADOS
        // ASSIM COMO UMA CLASSE ABSTRATA, UMA INTERFACE NÃO PODE SER INSTANCIADA.






    }
}